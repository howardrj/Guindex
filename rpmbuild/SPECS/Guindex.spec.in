%define _topdir   %(echo $PWD)/rpmbuild/
%define name      Guindex 
%define version   @PACKAGE_VERSION@
%define release   0
%define buildroot %{_topdir}/%{name}-%{version}
 
BuildRoot: %{buildroot}
Summary:   Guindex 
License:   commercial
Name:      %{name}
Version:   %{version}
Release:   %{release}
Source:    %{name}-%{version}.tar.gz


Requires(pre): gcc, systemd
Requires: python-setuptools, python-devel, nginx, python-pip
 
%description
Guindex RPM

%prep
echo "Preparing Guindex RPM"
%setup -q 

%build
python setup.py build

%install
mkdir -p /var/www/
mkdir -p %{buildroot}/var/www/
python setup.py install --single-version-externally-managed -O1 --root=$RPM_BUILD_ROOT --record=INSTALLED_FILES  --install-lib=/var/www/ --install-scripts=/usr/bin/

%clean 
rm -rf $RPM_BUILD_ROOT 

%post
if [ "$1" = "1" ]; then

    # Fresh install
    echo "Installed the Guindex"
    
    echo "Installing Guindex python dependencies"
    pip install -r /var/www/Guindex-@PACKAGE_VERSION@.egg-info/requires.txt
  
    echo "Migrating Guindex models to database"
    export PYTHONPATH=$PYTHONPATH:/var/www/
    /usr/bin/manage.py migrate

    echo "Collecting static files"
    /usr/bin/manage.py collectstatic
   
    echo "Starting Guindex Services"
    systemctl enable GuindexGunicorn.service
    systemctl enable GuindexStats.service
    systemctl enable GuindexAlerts.service
    systemctl enable GuindexDbBackup.service
    systemctl enable GuindexTelegramBot.service
    systemctl enable nginx

    systemctl start GuindexGunicorn.service
    systemctl start GuindexStats.service
    systemctl start GuindexAlerts.service
    systemctl start GuindexDbBackup.service
    systemctl start GuindexTelegramBot.service
    systemctl start nginx
    
elif [ "$1" = "2" ]; then

    # Upgrading

    echo "Upgrading the Guindex"
    systemctl stop GuindexGunicorn.service
    systemctl stop GuindexStats.service
    systemctl stop GuindexAlerts.service
    systemctl stop GuindexDbBackup.service
    systemctl stop GuindexTelegramBot.service
    systemctl stop nginx
fi

%preun
if [ "$1" = "0" ]; then

    # Uninstall

    echo "Removing the Guindex"
    systemctl stop GuindexGunicorn.service
    systemctl stop GuindexStats.service
    systemctl stop GuindexAlerts.service
    systemctl stop GuindexDbBackup.service
    systemctl stop GuindexTelegramBot.service
fi

%postun
if [ "$1" = "0" ]; then

    # Uninstall
    rm -rf /var/www/Guindex_CDN/
    rm -f  /usr/share/Guindex.db*

    echo "Finished uninstalling the Guindex"

elif [ "$1" = "1" ]; then

    # Upgrade

    echo "Migrating Guindex models to database"
    export PYTHONPATH=$PYTHONPATH:/var/www/
    /usr/bin/manage.py migrate

    echo "Collecting static files"
    /usr/bin/manage.py collectstatic

    echo "Installing Guindex python dependencies"
    pip install -r /var/www/Guindex-@PACKAGE_VERSION@.egg-info/requires.txt

    echo "Restarting Guindex services"
    systemctl daemon-reload
    systemctl restart GuindexGunicorn.service
    systemctl restart GuindexStats.service
    systemctl restart GuindexAlerts.service
    systemctl restart GuindexDbBackup.service
    systemctl restart GuindexTelegramBot.service
    systemctl restart nginx

    echo "Finished Upgrading the Guindex"
fi
 
%files
%defattr(-,root,root)
/var/www/
/usr/bin/manage.py
/etc/systemd/system/
/etc/nginx/sites-enabled/
